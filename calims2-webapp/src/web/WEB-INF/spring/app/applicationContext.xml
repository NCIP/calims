<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/jee 
        http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-3.0.xsd"
        >

  <jee:jndi-lookup id="dataSource" jndi-name="calims2"/>
  <jee:jndi-lookup id="mailSession" jndi-name="calims2MailSession"/>
  <jee:jndi-lookup id="filesystemrootdir" jndi-name="java:comp/env/filesystemrootdir"/>
  
  
  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="mappingLocations">
      <list>
        <value>classpath:/administration.hbm.xml</value>
        <value>classpath:/common.hbm.xml</value>
        <value>classpath:/inventory.hbm.xml</value>
        <value>classpath:/report.hbm.xml</value>
        <value>classpath:/workflow.hbm.xml</value>
      </list>
    </property>
    <property name="packagesToScan">
      <list>
        <value>gov.nih.nci.calims2.domain.administration</value>
        <value>gov.nih.nci.calims2.domain.administration.enumeration</value>
        <value>gov.nih.nci.calims2.domain.administration.customerservice</value>
        <value>gov.nih.nci.calims2.domain.administration.customerservice.enumeration</value>
        <value>gov.nih.nci.calims2.domain.common</value>
        <value>gov.nih.nci.calims2.domain.common.enumeration</value>
        <value>gov.nih.nci.calims2.domain.common.environmentalcondition</value>
        <value>gov.nih.nci.calims2.domain.inventory</value>
        <value>gov.nih.nci.calims2.domain.inventory.characteristics</value>
        <value>gov.nih.nci.calims2.domain.inventory.enumeration</value>
        <value>gov.nih.nci.calims2.domain.inventory.event</value>
        <value>gov.nih.nci.calims2.domain.report</value>
        <value>gov.nih.nci.calims2.domain.workflow</value>
      </list>
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.format_sql">true</prop>
        <prop key="hibernate.show_sql">true</prop>
        <prop key="hibernate.use_sql_comments">true</prop> 
        <prop key="use_outer_join">true</prop>
        <prop key="hibernate.jdbc.batch_size">1024</prop>
        <prop key="hibernate.jdbc.fetch_size">1024</prop>
        <prop key="jta.UserTransaction">java:comp/UserTransaction</prop>
      </props>
    </property>
  </bean>

  <!--
  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean> 
  -->
  
  <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" >
    <property name="allowCustomIsolationLevels" value="true"/>
  </bean>
  
  <aop:config>
    <aop:pointcut id="allBusinessMethods" expression="execution(* gov.nih.nci.calims2.business..*.*Service*.*(..))" />
    <aop:pointcut id="bamLoggerMethods" expression="execution(* gov.nih.nci.calims2.business.workflow.engine.BamLoggerImpl.*(..))" />
    <aop:pointcut id="sessionLoaderMethods" expression="execution(* gov.nih.nci.calims2.business.workflow.engine.SessionLoaderImpl.*(..))" />
    <aop:advisor advice-ref="defaultTransactionAdvice" pointcut-ref="allBusinessMethods"/>
    <aop:advisor advice-ref="bamTransactionAdvice" pointcut-ref="bamLoggerMethods"/>
    <aop:advisor advice-ref="allRequiredTransactionAdviceReadOnly" pointcut-ref="sessionLoaderMethods"/>
  </aop:config>
  
  <tx:advice id="allRequiredTransactionAdviceReadOnly" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="*" propagation="REQUIRED" read-only="true" isolation="READ_COMMITTED" />
    </tx:attributes>
  </tx:advice>
  
  <tx:advice id="defaultTransactionAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="create*" propagation="REQUIRED" isolation="READ_COMMITTED" 
                 rollback-for="gov.nih.nci.calims2.business.util.validation.ValidationException"/>
      <tx:method name="update*" propagation="REQUIRED" isolation="READ_COMMITTED" 
                 rollback-for="gov.nih.nci.calims2.business.util.validation.ValidationException"/>
      <tx:method name="delete*" propagation="REQUIRED" isolation="READ_COMMITTED" 
                 rollback-for="gov.nih.nci.calims2.business.util.validation.ValidationException"/>
      <tx:method name="find*" propagation="REQUIRED" isolation="READ_COMMITTED" 
                 rollback-for="gov.nih.nci.calims2.business.util.validation.ValidationException"/>                                 
    </tx:attributes>
  </tx:advice>
  
  <tx:advice id="bamTransactionAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="create*" propagation="REQUIRES_NEW" isolation="READ_COMMITTED" />
      <tx:method name="update*" propagation="REQUIRES_NEW" isolation="READ_COMMITTED" />
    </tx:attributes>
  </tx:advice>

  <bean id="helloWorld" class="gov.nih.nci.calims2.business.hello.HelloWorldImpl" />
  
  <bean id="auditableCRUDEventListener" class="gov.nih.nci.calims2.business.generic.AuditableCRUDEventListener">
    <property name="privilegeEvaluator" ref="privilegeEvaluator" />
  </bean>
  
  <bean id="emailService" class="gov.nih.nci.calims2.business.email.EmailServiceImpl" init-method="init" destroy-method="shutdown">
    <property name="mailSender" ref="mailSender"/>
    <property name="poolSize" value="5"/>
    <property name="numberOfRetry" value="1"/>
    <property name="retryPeriodInSeconds" value="30"/>
  </bean>
  
  <bean id="genericDao" class="gov.nih.nci.calims2.dao.HibernateGenericDao">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="session" ref="mailSession" />
  </bean>
  
  <bean id="notesCRUDEventListener" class="gov.nih.nci.calims2.business.generic.NotesCRUDEventListener">
    <property name="privilegeEvaluator" ref="privilegeEvaluator" />
  </bean>
  
  <bean id="privilegeEvaluator" class="gov.nih.nci.calims2.util.springsecurity.PrivilegeEvaluatorImpl" />
  
  <bean id="storageService" class="gov.nih.nci.calims2.business.storage.StorageServiceImpl">
    <property name="filesystemrootdir" ref="filesystemrootdir" />
  </bean>
  
  <bean id="validatorFactory" class="javax.validation.Validation" factory-method="buildDefaultValidatorFactory"/>
  
</beans>        